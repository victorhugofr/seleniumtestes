/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

import java.text.SimpleDateFormat;
apply plugin: 'java'

buildscript {
	repositories {
	    jcenter()
	}
}


sourceCompatibility = 1.8

repositories {
    mavenCentral()
 }

configurations {
	agent
}
apply plugin: 'war'

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    // testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.testng/testng
	// testCompile group: 'org.testng', name: 'testng', version: '6.14.3'

    
    compile 'io.github.bonigarcia:webdrivermanager:3.4.0'

    
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    
    
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-firefox-driver
	compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: '3.141.59'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver
	compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
	
	
	compile("org.seleniumhq.selenium:htmlunit-driver:2.35.1")
	
	// Dependencia da biblioteca do JSON
	compile 'org.json:json:20171018'
	
	// compilando dependencia do SigSaude e IMDEV
	//compile files("imdev.jar", "sigsaude.jar", "spring-security-core-5.0.5.RELEASE.jar")
	compile files("spring-security-core-5.0.5.RELEASE.jar")
	
	compile group: 'com.opencsv', name: 'opencsv', version: '4.1'
	
	// https://mvnrepository.com/artifact/com.itextpdf/itextpdf
	compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
	
	agent "org.aspectj:aspectjweaver:1.8.13"
	compile "ru.yandex.qatools.allure:allure-junit-adaptor:1.5.4"
	
	compile group: 'io.qameta.allure', name: 'allure-selenide', version: '2.0-BETA22'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	//compile files('/sigsaude/target/sigsaude-0.0.1-SNAPSHOT.jar')
	compile files('sigsaude.jar')
	compile files('imdev.jar')
	
	//compile 'br.ufrn.imd:imdevf:0.0.1-SNAPSHOT'
	
	
	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'
		
	// https://mvnrepository.com/artifact/org.testng/testng
    // testCompile group: 'org.testng', name: 'testng', version: '7.0.0-beta7'

	// https://mvnrepository.com/artifact/com.codeborne/phantomjsdriver
	compile ('com.codeborne:phantomjsdriver:1.4.4'){	
		exclude group: 'org.seleniumhq.selenium'
	}	
	
	
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'") // you can change it
    df.setTimeZone(TimeZone.getTimeZone("Brazil/East"))
    return df.format(new Date())
}

test {
    reports {
        junitXml.enabled = true
   		junitXml.destination = file("build/test-results/folder/xml/${buildTime()}")
        html.enabled = true
        html.destination = file("build/test-results/folder/html/${buildTime()}")
    }               
}
